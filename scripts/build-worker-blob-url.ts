import fs from "fs/promises"
import path from "path"

const workerInputPath = path.resolve(
  process.cwd(),
  "dist/workers/spice-simulation.worker.js",
)
const workerOutputPath = path.resolve(
  process.cwd(),
  "lib/workers/spice-simulation.worker.blob.js",
)

const build = async () => {
  try {
    await fs.mkdir(path.dirname(workerOutputPath), { recursive: true })
    const workerCode = await fs.readFile(workerInputPath, "utf-8")

    const base64 = Buffer.from(workerCode).toString("base64")

    const blobUrlModule = `// This file is generated by scripts/build-worker-blob-url.ts
// Do not edit this file directly.

const b64 = "${base64}";

let blobUrl = null;

export const getSpiceSimulationWorkerBlobUrl = () => {
  if (typeof window === "undefined") return null;
  if (blobUrl) return blobUrl;

  try {
    const blob = new Blob([atob(b64)], { type: "application/javascript" });
    blobUrl = URL.createObjectURL(blob);
    return blobUrl;
  } catch (e) {
    console.error("Failed to create blob URL for worker", e);
    return null;
  }
};
`

    await fs.writeFile(workerOutputPath, blobUrlModule)
    console.log(`Wrote worker blob URL module to ${workerOutputPath}`)
  } catch (e: any) {
    if (e.code === "ENOENT") {
      console.error(`Error: Worker file not found at ${workerInputPath}`)
      console.error("Please run 'bun run build:webworker' first.")
    } else {
      console.error("Failed to build worker blob URL", e)
    }
    process.exit(1)
  }
}

build()
